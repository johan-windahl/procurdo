module.exports=[2157,(a,b,c)=>{b.exports=a.x("node:fs",()=>require("node:fs"))},50227,(a,b,c)=>{b.exports=a.x("node:path",()=>require("node:path"))},49087,a=>{"use strict";a.s(["nodeCwdOrThrow",()=>g,"nodeFsOrThrow",()=>e,"nodePathOrThrow",()=>f],49087);var b=Object.getOwnPropertyNames;let c=((a,c)=>function(){return c||(0,a[b(a)[0]])((c={exports:{}}).exports,c),c.exports})({"src/runtime/node/safe-node-apis.js"(b,c){let{existsSync:d,writeFileSync:e,readFileSync:f,appendFileSync:g,mkdirSync:h,rmSync:i}=a.r(2157);c.exports={fs:{existsSync:d,writeFileSync:e,readFileSync:f,appendFileSync:g,mkdirSync:h,rmSync:i},path:a.r(50227),cwd:()=>process.cwd()}}})();function d(a,b){if(!a)throw Error(`Clerk: ${b} is missing. This is an internal error. Please contact Clerk's support.`)}let e=()=>(d(c.fs,"fs"),c.fs),f=()=>(d(c.path,"path"),c.path),g=()=>(d(c.cwd,"cwd"),c.cwd)},22e3,a=>{"use strict";a.s(["createOrReadKeyless",()=>o,"removeKeyless",()=>p,"safeParseClerkFile",()=>k]);var b=a.i(26174),c=a.i(49087),d=a.i(43918);let e=".clerk",f="clerk.lock",g=(...a)=>{let b=(0,c.nodePathOrThrow)(),d=(0,c.nodeCwdOrThrow)();return b.join(d(),e,...a)},h=".tmp",i=()=>g(h,"keyless.json"),j=!1;function k(){let{readFileSync:a}=(0,c.nodeFsOrThrow)();try{let b,c=i();try{b=a(c,{encoding:"utf-8"})||"{}"}catch{b="{}"}return JSON.parse(b)}catch{return}}let l=()=>{let{writeFileSync:a}=(0,c.nodeFsOrThrow)();j=!0,a(f,"This file can be deleted. Please delete this file and refresh your application",{encoding:"utf8",mode:"0777",flag:"w"})},m=()=>{let{rmSync:a}=(0,c.nodeFsOrThrow)();try{a(f,{force:!0,recursive:!0})}catch{}j=!1},n=()=>{let{existsSync:a}=(0,c.nodeFsOrThrow)();return j||a(f)};async function o(){let{writeFileSync:a,mkdirSync:f}=(0,c.nodeFsOrThrow)();if(n())return null;l();let j=i(),o=g(h,"README.md");f(g(h),{recursive:!0}),function(){let{existsSync:a,writeFileSync:b,readFileSync:d,appendFileSync:f}=(0,c.nodeFsOrThrow)(),g=(0,c.nodePathOrThrow)(),h=(0,c.nodeCwdOrThrow)(),i=g.join(h(),".gitignore");a(i)||b(i,""),d(i,"utf-8").includes(e+"/")||f(i,`
# clerk configuration (can include secrets)
/${e}/
`)}();let p=k();if((null==p?void 0:p.publishableKey)&&(null==p?void 0:p.secretKey))return m(),p;let q=(0,b.createClerkClientWithOptions)({}),r=await (0,d.collectKeylessMetadata)().then(d.formatMetadataHeaders).catch(()=>new Headers),s=await q.__experimental_accountlessApplications.createAccountlessApplication({requestHeaders:r}).catch(()=>null);return s&&(a(j,JSON.stringify(s),{encoding:"utf8",mode:"0777",flag:"w"}),a(o,`
## DO NOT COMMIT
This directory is auto-generated from \`@clerk/nextjs\` because you are running in Keyless mode. Avoid committing the \`.clerk/\` directory as it includes the secret key of the unclaimed instance.
  `,{encoding:"utf8",mode:"0777",flag:"w"})),m(),s}function p(){let{rmSync:a}=(0,c.nodeFsOrThrow)();if(!n()){l();try{a(g(),{force:!0,recursive:!0})}catch{}m()}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__ae9652f8._.js.map