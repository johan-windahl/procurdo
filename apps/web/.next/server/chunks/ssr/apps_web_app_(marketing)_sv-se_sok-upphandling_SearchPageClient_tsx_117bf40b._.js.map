{"version":3,"sources":["turbopack:///[project]/apps/web/app/(marketing)/sv-se/sok-upphandling/SearchPageClient.tsx","turbopack:///[project]/apps/web/components/marketing/CPVSelector.tsx","turbopack:///[project]/apps/web/components/marketing/SearchForm.tsx","turbopack:///[project]/apps/web/lib/ted.ts","turbopack:///[project]/apps/web/components/marketing/ResultsList.tsx","turbopack:///[project]/apps/web/components/ui/spinner.tsx"],"sourcesContent":["\"use client\";\n\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport SearchForm, { type Filters } from \"@/components/marketing/SearchForm\";\nimport ResultsList, { type Notice } from \"@/components/marketing/ResultsList\";\nimport Spinner from \"@/components/ui/spinner\";\n\nconst defaultFilters: Filters = {\n  cpvs: [],\n  text: \"\",\n  dateFrom: \"\",\n  deadlineTo: \"\",\n  country: \"\",\n  city: \"\",\n  status: \"ongoing\",\n  noticeType: \"\",\n  valueMin: \"\",\n  valueMax: \"\",\n};\n\nexport default function SearchPageClient() {\n  const searchParams = useSearchParams();\n  const router = useRouter();\n\n  const [filters, setFilters] = useState<Filters>(defaultFilters);\n  const [results, setResults] = useState<Notice[]>([]);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const limit = 20;\n\n  const initialFromParams = useMemo<Partial<Filters>>(() => {\n    if (!searchParams) return {};\n    const cpvParam = searchParams.get(\"cpv\");\n    const cpvs = cpvParam ? cpvParam.split(\",\").filter(Boolean) : [];\n    return {\n      cpvs,\n      text: searchParams.get(\"q\") || \"\",\n      dateFrom: searchParams.get(\"from\") || \"\",\n      deadlineTo: searchParams.get(\"to\") || \"\",\n      country: searchParams.get(\"country\") || \"\",\n      city: searchParams.get(\"city\") || \"\",\n      noticeType: searchParams.get(\"type\") || \"\",\n      valueMin: searchParams.get(\"min\") || \"\",\n      valueMax: searchParams.get(\"max\") || \"\",\n      status: (searchParams.get(\"status\") as Filters[\"status\"]) || \"ongoing\",\n    };\n  }, [searchParams]);\n\n  useEffect(() => {\n    setFilters((prev) => ({ ...prev, ...initialFromParams }));\n    const p = Number(searchParams?.get(\"page\") || \"1\") || 1;\n    setPage(p);\n  }, [initialFromParams, searchParams]);\n\n  const updateUrl = useCallback(\n    (f: Filters, p: number) => {\n      const params = new URLSearchParams();\n      if (f.cpvs.length) params.set(\"cpv\", f.cpvs.join(\",\"));\n      if (f.text) params.set(\"q\", f.text);\n      if (f.dateFrom) params.set(\"from\", f.dateFrom);\n      if (f.deadlineTo) params.set(\"to\", f.deadlineTo);\n      if (f.country) params.set(\"country\", f.country);\n      if (f.city) params.set(\"city\", f.city);\n      if (f.noticeType) params.set(\"type\", f.noticeType);\n      if (f.valueMin) params.set(\"min\", String(f.valueMin));\n      if (f.valueMax) params.set(\"max\", String(f.valueMax));\n      if (f.status && f.status !== \"ongoing\") params.set(\"status\", f.status);\n      if (p > 1) params.set(\"page\", String(p));\n      const qs = params.toString();\n      router.replace(qs ? `?${qs}` : \"\");\n    },\n    [router]\n  );\n\n  const runSearch = useCallback(\n    async (f: Filters, p = 1) => {\n      setHasSearched(true);\n      setLoading(true);\n      setError(null);\n      setPage(p);\n      updateUrl(f, p);\n      const res = await fetch(`/api/search?page=${p}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(f),\n      });\n      try {\n        const data = await res.json();\n        if (!res.ok || data?.error) {\n          const detail = data?.unsupportedValue && data?.parameterName\n            ? ` (${data.parameterName}: ${data.unsupportedValue})`\n            : \"\";\n          setError(`${data?.message || data?.error || 'Ett fel inträffade vid sökning'}${detail}`);\n          setResults([]);\n          setTotal(0);\n          return;\n        }\n        setResults(data.items || []);\n        setTotal(Number(data.total || 0));\n        if (p > 1) window.scrollTo({ top: 0, behavior: \"smooth\" });\n      } finally {\n        setLoading(false);\n      }\n    },\n    [updateUrl]\n  );\n\n  // Only auto-search when explicit query params exist in the URL\n  useEffect(() => {\n    if (!searchParams) return;\n    const hasQueryParams = searchParams.toString().length > 0;\n    if (hasQueryParams) {\n      const p = Number(searchParams.get(\"page\") || \"1\") || 1;\n      runSearch({ ...filters, ...initialFromParams }, p);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n\n  const onSubmit = (f: Filters) => {\n    setFilters(f);\n    runSearch(f, 1);\n  };\n\n  return (\n    <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-12\">\n      <h1 className=\"text-3xl font-semibold tracking-tight\">Hitta upphandlingar och ramavtal gratis</h1>\n      <p className=\"mt-2 text-muted-foreground\">\n        Sök och filtrera offentliga upphandlingar och ramavtal. Hitta aktuella upphandlingar med CPV-koder, fritext, datum och plats.\n      </p>\n      <div className=\"mt-8\">\n        <SearchForm onSearch={onSubmit} initial={initialFromParams} />\n      </div>\n      {error ? (\n        <div className=\"mt-6 rounded-md border border-destructive/30 bg-destructive/10 p-3 text-sm\">\n          {error}\n        </div>\n      ) : loading ? (\n        <div className=\"mt-8 flex justify-center\">\n          <Spinner size={22} label=\"Söker upphandlingar...\" />\n        </div>\n      ) : results.length > 0 ? (\n        <ResultsList\n          results={results}\n          page={page}\n          limit={limit}\n          total={total}\n          onPage={(p) => runSearch(filters, p)}\n        />\n      ) : hasSearched ? (\n        <p className=\"mt-8 text-sm text-center text-muted-foreground\">Inga resultat hittades</p>\n      ) : null}\n    </div>\n  );\n}\n","\"use client\";\n\nimport { useMemo, useState } from \"react\";\nimport data from \"@/data/cpv.json\";\n\ntype Node = {\n  code: string;\n  name: string;\n  children?: Node[];\n};\n\ntype Props = {\n  value: string[];\n  onChange: (codes: string[]) => void;\n};\n\nexport default function CPVSelector({ value, onChange }: Props) {\n  const [expandedNodes, setExpandedNodes] = useState<Set<string>>(new Set());\n\n  // Fast lookup by code\n  const nodeMap = useMemo(() => {\n    const map = new Map<string, Node>();\n    (data as Node[]).forEach((node) => {\n      map.set(node.code, node);\n    });\n    return map;\n  }, []);\n\n  // Top-level main divisions (XX000000)\n  const topLevelNodes = useMemo(() => {\n    return (data as Node[]).filter((node) => node.code.endsWith(\"000000\"));\n  }, []);\n\n  // Compute children dynamically if not present in JSON\n  const getChildrenForNode = useMemo(() => {\n    return (nodeCode: string): Node[] => {\n      const node = nodeMap.get(nodeCode);\n      if (node && node.children && node.children.length > 0) {\n        return node.children;\n      }\n\n      const all = data as Node[];\n      const children: Node[] = [];\n\n      if (nodeCode.endsWith(\"000000\")) {\n        // Main division (XX000000) -> groups (XXX00000)\n        const prefix = nodeCode.substring(0, 2);\n        children.push(\n          ...all.filter(\n            (n) =>\n              n.code.startsWith(prefix) &&\n              n.code.endsWith(\"00000\") &&\n              n.code !== nodeCode &&\n              n.code.length === 8\n          )\n        );\n      } else if (nodeCode.endsWith(\"00000\")) {\n        // Group (XXX00000) -> subgroups (XXXX0000)\n        const prefix = nodeCode.substring(0, 3);\n        children.push(\n          ...all.filter(\n            (n) =>\n              n.code.startsWith(prefix) &&\n              n.code.endsWith(\"0000\") &&\n              n.code !== nodeCode &&\n              n.code.length === 8\n          )\n        );\n      } else if (nodeCode.endsWith(\"0000\")) {\n        // Subgroup (XXXX0000) -> categories (XXXXX000)\n        const prefix = nodeCode.substring(0, 4);\n        children.push(\n          ...all.filter(\n            (n) =>\n              n.code.startsWith(prefix) &&\n              n.code.endsWith(\"000\") &&\n              n.code !== nodeCode &&\n              n.code.length === 8\n          )\n        );\n      } else if (nodeCode.endsWith(\"000\")) {\n        // Category (XXXXX000) -> subcategories and individual codes\n        const prefix = nodeCode.substring(0, 5);\n        children.push(\n          ...all.filter(\n            (n) =>\n              n.code.startsWith(prefix) &&\n              n.code !== nodeCode &&\n              n.code.length === 8 &&\n              !n.code.endsWith(\"000\")\n          )\n        );\n      }\n\n      return children;\n    };\n  }, [nodeMap]);\n\n  const toggleExpansion = (nodeCode: string) => {\n    setExpandedNodes((prev) => {\n      const next = new Set(prev);\n      if (next.has(nodeCode)) next.delete(nodeCode);\n      else next.add(nodeCode);\n      return next;\n    });\n  };\n\n  const toggleSelection = (node: Node, checked: boolean) => {\n    const codes = new Set(value);\n    if (checked) codes.add(node.code);\n    else codes.delete(node.code);\n    onChange(Array.from(codes));\n  };\n\n  const renderNode = (node: Node) => {\n    const isExpanded = expandedNodes.has(node.code);\n    const children = getChildrenForNode(node.code);\n    const hasChildren = children.length > 0;\n    const isSelected = value.includes(node.code);\n\n    return (\n      <li key={node.code} className=\"mb-1\">\n        <div className=\"flex items-center gap-2 p-1 rounded hover:bg-accent/40\">\n          {hasChildren ? (\n            <button\n              type=\"button\"\n              onClick={(e) => {\n                e.stopPropagation();\n                toggleExpansion(node.code);\n              }}\n              className=\"w-4 h-4 flex items-center justify-center text-muted-foreground hover:text-foreground\"\n              aria-expanded={isExpanded}\n            >\n              {isExpanded ? \"▼\" : \"▶\"}\n            </button>\n          ) : (\n            <div className=\"w-4\" />\n          )}\n\n          <input\n            id={`cpv-${node.code}`}\n            type=\"checkbox\"\n            checked={isSelected}\n            onChange={(e) => toggleSelection(node, e.target.checked)}\n            className=\"h-4 w-4\"\n          />\n\n          <label htmlFor={`cpv-${node.code}`} className=\"text-sm\">\n            <span className=\"font-mono text-muted-foreground mr-2\">{node.code}</span>\n            {node.name}\n          </label>\n        </div>\n        {hasChildren && isExpanded ? (\n          <ul className=\"mt-1 ml-4\">\n            {children.map((child) => renderNode(child))}\n          </ul>\n        ) : null}\n      </li>\n    );\n  };\n\n  const clearAllSelections = () => {\n    onChange([]);\n    setExpandedNodes(new Set());\n  };\n\n  return (\n    <div className=\"rounded-md border bg-card p-3\">\n      <div className=\"mb-2 flex justify-between items-center\">\n        <div className=\"text-sm font-medium\">\n          CPV-koder ({value.length} valda) - {topLevelNodes.length} kategorier att expandera\n        </div>\n        {value.length > 0 ? (\n          <button\n            type=\"button\"\n            onClick={clearAllSelections}\n            className=\"px-3 py-1 text-xs rounded border hover:bg-accent\"\n            title=\"Rensa alla val\"\n          >\n            Rensa\n          </button>\n        ) : null}\n      </div>\n      <div className=\"max-h-96 overflow-y-auto\">\n        <ul className=\"space-y-1\">\n          {topLevelNodes.map((node) => renderNode(node))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","\"use client\";\n\nimport { useState } from \"react\";\nimport CPVSelector from \"./CPVSelector\";\nimport countries from \"@/data/countries.json\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { formatThousandsSpaces, normalizeNumericInput } from \"@/lib/utils\";\n\nexport type Filters = {\n  cpvs: string[];\n  text: string;\n  dateFrom: string;\n  deadlineTo?: string;\n  country: string;\n  city: string;\n  status: \"ongoing\" | \"completed\";\n  noticeType?: string;\n  valueMin?: number | string;\n  valueMax?: number | string;\n};\n\ntype Props = {\n  initial?: Partial<Filters>;\n  onSearch: (filters: Filters) => void;\n};\n\nconst empty: Filters = {\n  cpvs: [],\n  text: \"\",\n  dateFrom: \"\",\n  deadlineTo: \"\",\n  country: \"\",\n  city: \"\",\n  status: \"ongoing\",\n  noticeType: \"\",\n  valueMin: \"\",\n  valueMax: \"\",\n};\n\nexport default function SearchForm({ onSearch, initial }: Props) {\n  const [filters, setFilters] = useState<Filters>({ ...empty, ...(initial || {}) });\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  const update = (f: Partial<Filters>) => setFilters((prev) => ({ ...prev, ...f }));\n\n  const submit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSearch(filters);\n  };\n\n  return (\n    <form onSubmit={submit} className=\"rounded-xl border bg-card p-6 space-y-5\">\n      {/* Quick filters */}\n      <div className=\"grid gap-4 md:grid-cols-3\">\n        <div className=\"md:col-span-2 space-y-1\">\n          <label className=\"block text-sm font-medium\">Sökning</label>\n          <input\n            className=\"w-full rounded-md border bg-background px-3 py-2 text-sm\"\n            value={filters.text}\n            onChange={(e) => update({ text: e.target.value })}\n            placeholder=\"Ex. it, bygg, konsult...\"\n          />\n        </div>\n        <div className=\"space-y-1\">\n          <label className=\"block text-sm font-medium\">Land</label>\n          <select\n            className=\"w-full rounded-md border bg-background px-3 py-2 text-sm\"\n            value={filters.country}\n            onChange={(e) => update({ country: e.target.value })}\n          >\n            <option value=\"\">Alla</option>\n            {countries.map((c) => (\n              <option key={c.code} value={c.code}>\n                {c.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"flex items-center justify-between\">\n        <button\n          type=\"button\"\n          onClick={() => setShowAdvanced((v) => !v)}\n          className=\"text-sm text-muted-foreground hover:text-foreground\"\n        >\n          {showAdvanced ? \"Dölj avancerade filter\" : \"Visa avancerade filter\"}\n        </button>\n        <Button type=\"submit\" size=\"lg\">Sök</Button>\n      </div>\n\n      {/* Advanced filters */}\n      <div className={cn(\"space-y-5\", showAdvanced ? \"block\" : \"hidden\")}\n        aria-hidden={!showAdvanced}\n      >\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium\">CPV-koder</label>\n          <CPVSelector value={filters.cpvs} onChange={(cpvs) => update({ cpvs })} />\n        </div>\n        <div className=\"grid gap-4 md:grid-cols-2\">\n          <div className=\"space-y-1\">\n            <label className=\"block text-sm font-medium\">Publicerad efter</label>\n            <input\n              type=\"date\"\n              className=\"w-full rounded-md border bg-background px-3 py-2 text-sm\"\n              value={filters.dateFrom}\n              onChange={(e) => update({ dateFrom: e.target.value })}\n            />\n          </div>\n          <div className=\"space-y-1\">\n            <label className=\"block text-sm font-medium\">Sista anbudsdag senast</label>\n            <input\n              type=\"date\"\n              className=\"w-full rounded-md border bg-background px-3 py-2 text-sm\"\n              value={filters.deadlineTo || \"\"}\n              onChange={(e) => update({ deadlineTo: e.target.value })}\n            />\n          </div>\n          <div className=\"space-y-1\">\n            <label className=\"block text-sm font-medium\">Ort</label>\n            <input\n              className=\"w-full rounded-md border bg-background px-3 py-2 text-sm\"\n              value={filters.city}\n              onChange={(e) => update({ city: e.target.value })}\n              placeholder=\"Ex. Stockholm\"\n            />\n          </div>\n          <div className=\"space-y-1\">\n            <label className=\"block text-sm font-medium\">Annonstyp</label>\n            <select\n              className=\"w-full rounded-md border bg-background px-3 py-2 text-sm\"\n              value={filters.noticeType || \"\"}\n              onChange={(e) => update({ noticeType: e.target.value })}\n            >\n              <option value=\"\">Alla</option>\n              <option value=\"Contract Notice\">Upphandlingsannons</option>\n              <option value=\"Prior Information Notice\">Förhandsannons</option>\n              <option value=\"Award Notice\">Tilldelningsannons</option>\n            </select>\n          </div>\n          <div className=\"space-y-1\">\n            <label className=\"block text-sm font-medium\">Värde (min)</label>\n            <input\n              type=\"text\"\n              inputMode=\"numeric\"\n              pattern=\"[0-9 ]*\"\n              className=\"w-full rounded-md border bg-background px-3 py-2 text-sm\"\n              value={formatThousandsSpaces(filters.valueMin || \"\")}\n              onChange={(e) => update({ valueMin: normalizeNumericInput(e.target.value) })}\n              placeholder=\"10 000\"\n            />\n          </div>\n          <div className=\"space-y-1\">\n            <label className=\"block text-sm font-medium\">Värde (max)</label>\n            <input\n              type=\"text\"\n              inputMode=\"numeric\"\n              pattern=\"[0-9 ]*\"\n              className=\"w-full rounded-md border bg-background px-3 py-2 text-sm\"\n              value={formatThousandsSpaces(filters.valueMax || \"\")}\n              onChange={(e) => update({ valueMax: normalizeNumericInput(e.target.value) })}\n              placeholder=\"1 000 000\"\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n","// Helpers to translate TED field values into Swedish for UI\n\nconst norm = (s: string) => s.trim().toLowerCase().replace(/[^a-z0-9]+/g, \"-\");\n\nexport function translateProcedureType(input?: string): string | undefined {\n  if (!input) return undefined;\n  const n = norm(input);\n  // Negotiated with/without call for competition (common short codes)\n  if (n.includes(\"neg-w-call\") || (n.includes(\"neg\") && n.includes(\"w-call\"))) {\n    return \"Förhandlat förfarande med föregående annonsering\";\n  }\n  if (\n    n.includes(\"neg-wo-call\") ||\n    n.includes(\"neg-w-o-call\") ||\n    n.includes(\"neg-without-call\") ||\n    n.includes(\"negotiated-without\")\n  ) {\n    return \"Förhandlat förfarande utan föregående annonsering\";\n  }\n  if (n.includes(\"open\")) return \"Öppet förfarande\";\n  if (n.includes(\"restricted\")) return \"Selektivt förfarande\";\n  if (n.includes(\"competitive-procedure-with-negotiation\")) return \"Konkurrenspräglat förfarande med förhandling\";\n  if (n.includes(\"competitive-dialogue\")) return \"Konkurrenspräglad dialog\";\n  if (n.includes(\"innovation-partnership\")) return \"Innovationspartnerskap\";\n  if (n.includes(\"negotiated\")) return \"Förhandlat förfarande\";\n  if (n.includes(\"dynamic-purchasing-system\")) return \"Dynamiskt inköpssystem\";\n  if (n.includes(\"direct-award\") || n.includes(\"directaward\")) return \"Direktupphandling\";\n  return input; // fallback as-is\n}\n\nexport function translateNoticeType(input?: string): string | undefined {\n  if (!input) return undefined;\n  const n = norm(input);\n  if (n.startsWith(\"cn\") || n.includes(\"contract-notice\")) return \"Upphandlingsannons\";\n  if (n.startsWith(\"can\") || n.includes(\"award-notice\")) return \"Tilldelningsannons\";\n  if (n.startsWith(\"pin\") || n.includes(\"prior-information\")) return \"Förhandsannons\";\n  if (n.includes(\"subco\")) return \"Annons om underleverantörer\";\n  if (n.includes(\"contract-award\")) return \"Tilldelningsannons\";\n  return input; // fallback\n}\n\nexport function translateContractNature(input?: string): string | undefined {\n  if (!input) return undefined;\n  const n = norm(input);\n  if (n.includes(\"services\")) return \"Tjänster\";\n  if (n.includes(\"works\")) return \"Byggentreprenad\";\n  if (n.includes(\"supplies\")) return \"Varor\";\n  return input;\n}\n","export type Notice = {\n  publicationNumber: string;\n  publicationDate: string;\n  deadlineDate?: string;\n  title: string;\n  buyerName: string;\n  buyerCity?: string;\n  country?: string;\n  documentUrl?: string;\n  value?: string;\n  valueCurrency?: string;\n  description?: string;\n  classification?: string;\n  contractNature?: string;\n  noticeType?: string;\n  procedureType?: string;\n  frameworkAgreement?: boolean;\n};\n\ntype Props = {\n  results: Notice[];\n  page: number;\n  limit: number;\n  total: number;\n  onPage: (p: number) => void;\n};\n\nimport { translateProcedureType, translateNoticeType, translateContractNature } from \"@/lib/ted\";\nimport { formatThousandsSpaces } from \"@/lib/utils\";\n\nexport default function ResultsList({ results, page, limit, total, onPage }: Props) {\n  const pages = Math.max(1, Math.ceil(total / limit));\n  return (\n    <div className=\"mt-8 space-y-6\">\n      <ul className=\"space-y-4\">\n        {results.map((r) => (\n          <li key={r.publicationNumber} className=\"rounded-lg border p-6\">\n            <div className=\"flex items-start justify-between gap-4\">\n              <h3 className=\"text-lg font-semibold leading-snug\">\n                {r.documentUrl ? (\n                  <a href={r.documentUrl} target=\"_blank\" rel=\"noreferrer\" className=\"hover:underline\">\n                    {r.title}\n                  </a>\n                ) : (\n                  <span>{r.title}</span>\n                )}\n              </h3>\n              <span className=\"text-xs text-muted-foreground whitespace-nowrap\" title=\"Publikationsnummer\">\n                {r.publicationNumber}\n              </span>\n            </div>\n            <div className=\"mt-2 flex flex-wrap gap-2 text-xs\">\n              {r.noticeType ? (\n                <span className=\"inline-flex items-center rounded-full border px-2 py-0.5\">\n                  {translateNoticeType(r.noticeType)}\n                </span>\n              ) : null}\n              {r.contractNature ? (\n                <span className=\"inline-flex items-center rounded-full border px-2 py-0.5\">\n                  {translateContractNature(r.contractNature)}\n                </span>\n              ) : null}\n              {r.frameworkAgreement ? (\n                <span className=\"inline-flex items-center rounded-full border px-2 py-0.5\">Ramavtal</span>\n              ) : null}\n            </div>\n            <div className=\"mt-3 grid gap-2 text-sm text-muted-foreground md:grid-cols-2\">\n              <div>\n                <span className=\"font-medium text-foreground\">Köpare:</span> {r.buyerName}\n              </div>\n              <div>\n                <span className=\"font-medium text-foreground\">Plats:</span> {r.buyerCity} {r.country}\n              </div>\n              <div>\n                <span className=\"font-medium text-foreground\">Publicerad:</span> {r.publicationDate}\n              </div>\n              {r.deadlineDate ? (\n                <div>\n                  <span className=\"font-medium text-foreground\">Sista anbudsdag:</span> {r.deadlineDate}\n                </div>\n              ) : null}\n              {r.value ? (\n                <div>\n                  <span className=\"font-medium text-foreground\">Värde:</span> {(() => {\n                    const n = Number(String(r.value).replace(/\\s/g, \"\").replace(/,/g, \".\"));\n                    return Number.isFinite(n) ? formatThousandsSpaces(n) : r.value;\n                  })()} {r.valueCurrency || ''}\n                </div>\n              ) : null}\n              {r.classification ? (\n                <div>\n                  <span className=\"font-medium text-foreground\">CPV-kod:</span> {r.classification}\n                </div>\n              ) : null}\n              {r.procedureType ? (\n                <div>\n                  <span className=\"font-medium text-foreground\">Förfarande:</span> {translateProcedureType(r.procedureType)}\n                </div>\n              ) : null}\n            </div>\n            {r.description ? (\n              <p className=\"mt-3 text-sm text-muted-foreground line-clamp-3\">{r.description}</p>\n            ) : null}\n          </li>\n        ))}\n      </ul>\n\n      {pages > 1 ? (\n        <div className=\"flex items-center justify-center gap-4\">\n          <button\n            type=\"button\"\n            disabled={page <= 1}\n            onClick={() => onPage(page - 1)}\n            className=\"px-3 py-1 rounded border bg-background disabled:opacity-50\"\n          >\n            Föregående\n          </button>\n          <span className=\"text-sm text-muted-foreground\">\n            Sida {page} av {pages}\n          </span>\n          <button\n            type=\"button\"\n            disabled={page >= pages}\n            onClick={() => onPage(page + 1)}\n            className=\"px-3 py-1 rounded border bg-background disabled:opacity-50\"\n          >\n            Nästa\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","\"use client\";\n\nimport { cn } from \"@/lib/utils\";\n\ntype Props = {\n  size?: number;\n  className?: string;\n  label?: string;\n};\n\nexport default function Spinner({ size = 20, className, label }: Props) {\n  const style: React.CSSProperties = {\n    width: size,\n    height: size,\n  };\n  return (\n    <div className={cn(\"inline-flex items-center gap-2\", className)} aria-live=\"polite\" aria-busy=\"true\">\n      <div\n        className=\"animate-spin rounded-full border-2 border-muted-foreground/30 border-t-muted-foreground\"\n        style={style}\n        role=\"status\"\n        aria-label={label || \"Laddar\"}\n      />\n      {label ? <span className=\"text-sm text-muted-foreground\">{label}</span> : null}\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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"}